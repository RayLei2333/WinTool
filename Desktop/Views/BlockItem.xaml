<UserControl x:Class="Desktop.Views.BlockItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Desktop.Views"
             xmlns:converts="clr-namespace:Desktop.Converters" 
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800"
             Width="{Binding Data.Width}"
             Height="{Binding Data.Height}"
             Margin="{Binding BlockItemMargin}"
             MinWidth="200"
             MaxHeight="{Binding MaxHeight}"
             x:Name="BlockItemControl">
    <UserControl.Resources>
        <converts:ValueEqualsConverter x:Key="ValueEqualsConverter" />
        <Style x:Key="TopBarButton" TargetType="Button">
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Foreground" Value="#fff"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource IconFont}"></Setter>

        </Style>
        <Style x:Key="LockButton" TargetType="Button" BasedOn="{StaticResource TopBarButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Lock}" Value="True">
                    <Setter Property="Content" Value="&#xe600;"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Lock}" Value="False">
                    <Setter Property="Content" Value="&#xe602;"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TopBarTextBox" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEditName}" Value="False">
                    <Setter Property="IsReadOnly" Value="True"></Setter>
                    <Setter Property="Cursor" Value="Arrow"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Foreground" Value="#fff"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEditName}" Value="True">
                    <Setter Property="IsReadOnly" Value="False"></Setter>
                    <Setter Property="Cursor" Value="AppStarting"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid x:Name="grid" Background="#000">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="31"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="0,0,0,1" >
                <Grid x:Name="title" Background="Transparent">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding TitleMouseDownCommand}" PassEventArgsToCommand="True"></i:InvokeCommandAction>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseMove">
                            <i:InvokeCommandAction Command="{Binding TitleMouseMoveCommand}" PassEventArgsToCommand="True"></i:InvokeCommandAction>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding TitleMouseUpCommand}" PassEventArgsToCommand="True"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Button Style="{StaticResource LockButton}" HorizontalAlignment="Left" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding LockButtonClickCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <TextBox Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TopBarTextBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding TitleDoubleClickCommand}"  PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding TitleKeyUpCommand}" PassEventArgsToCommand="True"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="MenuButton" Style="{StaticResource TopBarButton}" Content="&#xe601;" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding ViewTypeClickCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <!--设置菜单项为可勾选-->
                            <Button.ContextMenu>
                                <ContextMenu x:Name="MenuContextMenu">
                                    <MenuItem Header="列表显示" IsCheckable="True" IsChecked="{Binding ViewType, Mode=OneWay, Converter={StaticResource ValueEqualsConverter},ConverterParameter=1}" Tag="1" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding ViewTypeItemClickCommand}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                    <MenuItem Header="小图标显示" IsCheckable="True" IsChecked="{Binding ViewType, Mode=OneWay, Converter={StaticResource ValueEqualsConverter}, ConverterParameter=2}" Tag="2">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding ViewTypeItemClickCommand}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                    <MenuItem Header="大图标显示" IsCheckable="True" IsChecked="{Binding ViewType, Mode=OneWay, Converter={StaticResource ValueEqualsConverter}, ConverterParameter=3}" Tag="3">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding ViewTypeItemClickCommand}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </StackPanel>

                </Grid>
            </Border>
            <ContentControl Grid.Row="1" x:Name="contentControl" Content="{Binding CurrentView}" Background="Transparent"></ContentControl>
        </Grid>

        <!-- 上边缘 -->
        <Thumb Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Top" Cursor="SizeNS" DragDelta="TopThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 下边缘 -->
        <Thumb Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Cursor="SizeNS" DragDelta="BottomThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 左边缘 -->
        <Thumb Width="5" HorizontalAlignment="Left" VerticalAlignment="Stretch" Cursor="SizeWE" DragDelta="LeftThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>


        <!-- 右边缘 -->
        <Thumb Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Cursor="SizeWE" DragDelta="RightThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 左上角 -->
        <Thumb Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="SizeNWSE" DragDelta="TopLeftThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 右上角 -->
        <Thumb Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="SizeNESW" DragDelta="TopRightThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 左下角 -->
        <Thumb Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Cursor="SizeNESW" DragDelta="BottomLeftThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>

        <!-- 右下角 -->
        <Thumb Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE" DragDelta="BottomRightThumb_DragDelta" DragCompleted="Thumb_DragCompleted"/>
    </Grid>
</UserControl>
